#include <iostream>
#include <cctype>

using namespace std;

// List of C++ reserved keywords (using a plain array)
const string keywords[] = {
    "int", "float", "double", "char", "return", "if", "else", "while", "for",
    "switch", "case", "default", "break", "continue", "void", "do", "long",
    "short", "signed", "unsigned", "struct", "class", "public", "private",
    "protected", "namespace", "using", "new", "delete", "try", "catch", "throw",
    "static", "const", "volatile", "true", "false", "virtual", "this"
};

// Function to check if a string is a keyword
bool isKeyword(const string& str) {
    int keywordCount = sizeof(keywords) / sizeof(keywords[0]); // Get number of keywords
    for (int i = 0; i < keywordCount; i++) {
        if (str == keywords[i])
            return true;
    }
    return false;
}

// Function to check if a string is a valid identifier
bool isValidIdentifier(const string& str) {
    if (str.empty()) return false; // Empty string is not a valid identifier

    // First character must be a letter or underscore
    if (!isalpha(str[0]) && str[0] != '_') {
        return false;
    }

    // Remaining characters must be letters, digits, or underscores
    for (size_t i = 1; i < str.length(); i++) {
        if (!isalnum(str[i]) && str[i] != '_') {
            return false;
        }
    }

    // Identifier should not be a keyword
    if (isKeyword(str)) {
        return false;
    }

    return true;
}

int main() {
    string input;
    cout << "Enter an identifier: ";
    cin >> input;

    if (isValidIdentifier(input)) {
        cout << "\"" << input << "\" is a valid identifier.\n";
    } else {
        cout << "\"" << input << "\" is NOT a valid identifier.\n";
    }

    return 0;
}
